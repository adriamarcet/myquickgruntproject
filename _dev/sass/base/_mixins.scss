// Micro clearfix mixin
@mixin cf {
	&:before,
	&:after {
	    content: " "; /* 1 */
	    display: table; /* 2 */
	}

	&:after {
	    clear: both;
	}

	& {
	    *zoom: 1;
	}
}
// Mantain aspect ratio mixin: https://goo.gl/GiL28O
// i.e: @include aspect-ratio(16, 9 );
@mixin aspect-ratio($width, $height) {
	position: relative;
	&:before{
		display: block;
		content: " ";
		width: 100%;
		padding-top: ($height / $width) * 100%;
	}

	& > * {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}
}
// Creating rows with row machine https://goo.gl/H1Gkw2
// i.e: @include rowMachine(5, 2%);
@mixin rowMachine($numPerRow, $margin) {

	width: ((100% - (($numPerRow - 1) * $margin)) / $numPerRow);
	
	&:nth-child(n) {
		margin-bottom: $margin;
		margin-right: $margin;
	}
	&:nth-child(#{$numPerRow}n) {
		margin-right: 0;
		margin-bottom: 0;
	}
}


// Mixin to make the element centered within its parent
// the parent has to have a position different than static for this to work
// Reference: @https://goo.gl/mrRc3M
@mixin center($width: null, $height: null) {

	position: absolute;
	top: 50%;
	left: 50%;

	// depending if we specified width or height to the mixin
	@if not $width and not $height {
		transform: translate(-50%, -50%);
	} @else if $width and $height {
		width: $width;
		height: $height;
		margin: -($width / 2) #{0 0} -($height / 2);
	} @else if not $height {
		width: $width;
		margin-left: -($width / 2);
		transform: translateY(-50%);
	} @else {
		height: $height;
		margin-top: -($height / 2);
		transform: translateX(-50%);
	}
}
